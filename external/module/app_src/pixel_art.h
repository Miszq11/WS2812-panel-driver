#ifndef PIXEL_ART_H
#define PIXEL_ART_H

#include <stddef.h>
#include <stdint.h>

uint8_t pixel_buffor[] = {
	0x00, 0x00, 0x00, 0xFF, 0x30, 0xFF, 0xED, 0x1C, 0x24, 0xFF, 0x30, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x30, 0xFF, 0xED, 0x1C, 0x24, 0xFF, 0x30, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x30, 0xFF, 0xED, 0x1C, 0x24, 0xFF, 0x30, 0xFF,
	0xFF, 0x30, 0xFF, 0xED, 0x1C, 0x24, 0xFF, 0xFF, 0x2E, 0xED, 0x1C, 0x24, 0xFF, 0x30, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x30, 0xFF, 0xED, 0x1C, 0x24, 0xFF, 0xFF, 0x2E, 0xED, 0x1C, 0x24, 0xFF, 0x30, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x30, 0xFF, 0xED, 0x1C, 0x24, 0xFF, 0xFF, 0x2E, 0xED, 0x1C, 0x24,
	0xED, 0x1C, 0x24, 0xFF, 0xFF, 0x2E, 0x22, 0xB1, 0x4C, 0xFF, 0xFF, 0x2E, 0xED, 0x1C, 0x24, 0xFF, 0x30, 0xFF, 0xED, 0x1C, 0x24, 0xFF, 0xFF, 0x2E, 0x22, 0xB1, 0x4C, 0xFF, 0xFF, 0x2E, 0xED, 0x1C, 0x24, 0xFF, 0x30, 0xFF, 0xED, 0x1C, 0x24, 0xFF, 0xFF, 0x2E, 0x22, 0xB1, 0x4C, 0xFF, 0xFF, 0x2E,
	0xFF, 0xFF, 0x2E, 0x22, 0xB1, 0x4C, 0x14, 0xFF, 0xFF, 0x22, 0xB1, 0x4C, 0xFF, 0xFF, 0x2E, 0xED, 0x1C, 0x24, 0xFF, 0xFF, 0x2E, 0x22, 0xB1, 0x4C, 0x14, 0xFF, 0xFF, 0x22, 0xB1, 0x4C, 0xFF, 0xFF, 0x2E, 0xED, 0x1C, 0x24, 0xFF, 0xFF, 0x2E, 0x22, 0xB1, 0x4C, 0x14, 0xFF, 0xFF, 0x22, 0xB1, 0x4C,
	0x22, 0xB1, 0x4C, 0x14, 0xFF, 0xFF, 0x00, 0xB7, 0xEF, 0x14, 0xFF, 0xFF, 0x22, 0xB1, 0x4C, 0xFF, 0xFF, 0x2E, 0x22, 0xB1, 0x4C, 0x14, 0xFF, 0xFF, 0x00, 0xB7, 0xEF, 0x14, 0xFF, 0xFF, 0x22, 0xB1, 0x4C, 0xFF, 0xFF, 0x2E, 0x22, 0xB1, 0x4C, 0x14, 0xFF, 0xFF, 0x00, 0xB7, 0xEF, 0x14, 0xFF, 0xFF,
	0x14, 0xFF, 0xFF, 0x00, 0xB7, 0xEF, 0xFF, 0x30, 0xFF, 0x00, 0xB7, 0xEF, 0x14, 0xFF, 0xFF, 0x22, 0xB1, 0x4C, 0x14, 0xFF, 0xFF, 0x00, 0xB7, 0xEF, 0xFF, 0x30, 0xFF, 0x00, 0xB7, 0xEF, 0x14, 0xFF, 0xFF, 0x22, 0xB1, 0x4C, 0x14, 0xFF, 0xFF, 0x00, 0xB7, 0xEF, 0xFF, 0x30, 0xFF, 0x00, 0xB7, 0xEF,
	0x00, 0xB7, 0xEF, 0xFF, 0x30, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x30, 0xFF, 0x00, 0xB7, 0xEF, 0x14, 0xFF, 0xFF, 0x00, 0xB7, 0xEF, 0xFF, 0x30, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x30, 0xFF, 0x00, 0xB7, 0xEF, 0x14, 0xFF, 0xFF, 0x00, 0xB7, 0xEF, 0xFF, 0x30, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x30, 0xFF,
	0xFF, 0x30, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x30, 0xFF, 0x00, 0xB7, 0xEF, 0xFF, 0x30, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x30, 0xFF, 0x00, 0xB7, 0xEF, 0xFF, 0x30, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

size_t pixel_buffor_len = 384;
size_t pixel_buffor_x = 16;
size_t pixel_buffor_y = 8;

#endif //PIXEL_ART_H
